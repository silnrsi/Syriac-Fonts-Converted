<?xml version='1.0' encoding='UTF-8'?>
<glyph name=".notdef" format="2">
  <advance width="1024"/>
  <note>
.notdef
</note>
  <outline>
    <contour>
      <point x="128" y="0" type="line"/>
      <point x="896" y="0" type="line"/>
      <point x="896" y="1400" type="line"/>
      <point x="128" y="1400" type="line"/>
    </contour>
    <contour>
      <point x="256" y="128" type="line"/>
      <point x="256" y="1272" type="line"/>
      <point x="768" y="1272" type="line"/>
      <point x="768" y="128" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>NPUSHB[ ]	/* 32 values pushed */
1 8 8 64 9 2 7 4 6 1 0 6 5 6 3 2 5 4 8 0 7 6 8 1 2 1 3 0 1 1 0 70
SROUND[ ]	/* SuperRound */
MDAP[1]	/* MoveDirectAbsPt */
SHZ[1]	/* ShiftZoneByLastPoint */
RTG[ ]	/* RoundToGrid */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MDAP[1]	/* MoveDirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]	/* MoveDirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
MDAP[1]	/* MoveDirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
ALIGNRP[ ]	/* AlignRelativePt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
MD[0]	/* MeasureDistance */
ROUND[00]	/* Round */
PUSHW[ ]	/* 2 values pushed */
0 8
MD[0]	/* MeasureDistance */
ROUND[00]	/* Round */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
64
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
SHPIX[ ]	/* ShiftZoneByPixel */
SRP1[ ]	/* SetRefPoint1 */
SHZ[1]	/* ShiftZoneByLastPoint */
PUSHW[ ]	/* 2 values pushed */
8 -64
SHPIX[ ]	/* ShiftZoneByPixel */
EIF[ ]	/* EndIf */</string>
      <key>com.schriftgestaltung.Glyphs.lastChange</key>
      <string>2025-02-10 17:36:15 +0000</string>
    </dict>
  </lib>
</glyph>
