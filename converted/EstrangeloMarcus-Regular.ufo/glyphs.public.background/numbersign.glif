<?xml version='1.0' encoding='UTF-8'?>
<glyph name="numbersign" format="2">
  <advance width="1139"/>
  <unicode hex="0023"/>
  <note>
numbersign
</note>
  <outline>
    <contour>
      <point x="342" y="0" type="line"/>
      <point x="485" y="0" type="line"/>
      <point x="535" y="246" type="line"/>
      <point x="674" y="246" type="line"/>
      <point x="626" y="0" type="line"/>
      <point x="766" y="0" type="line"/>
      <point x="816" y="246" type="line"/>
      <point x="998" y="246" type="line"/>
      <point x="998" y="384" type="line"/>
      <point x="845" y="384" type="line"/>
      <point x="882" y="570" type="line"/>
      <point x="998" y="570" type="line"/>
      <point x="998" y="709" type="line"/>
      <point x="911" y="709" type="line"/>
      <point x="961" y="955" type="line"/>
      <point x="815" y="955" type="line"/>
      <point x="766" y="709" type="line"/>
      <point x="627" y="709" type="line"/>
      <point x="677" y="955" type="line"/>
      <point x="536" y="955" type="line"/>
      <point x="486" y="709" type="line"/>
      <point x="307" y="709" type="line"/>
      <point x="307" y="570" type="line"/>
      <point x="458" y="570" type="line"/>
      <point x="420" y="384" type="line"/>
      <point x="307" y="384" type="line"/>
      <point x="307" y="246" type="line"/>
      <point x="392" y="246" type="line"/>
    </contour>
    <contour>
      <point x="562" y="384" type="line"/>
      <point x="600" y="570" type="line"/>
      <point x="739" y="570" type="line"/>
      <point x="702" y="384" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>NPUSHB[ ]	/* 137 values pushed */
1 32 32 64 33 15 31 29 27 24 23 20 19 18 16 15 14 13 10 9 6 5 4 2 1 0 29 29 30 28 31 28 25 24 25 10 10 11 9 8 9 26 10 26 27 7 6 7 4 4 5 3 2 3 0 8 8 9 27 27 8 31 31 28 30 29 30 11 10 11 23 22 23 12 10 12 13 21 20 21 18 18 19 17 16 17 14 22 22 23 13 13 22 30 29 19 18 3 5 2 8 25 24 21 20 1 5 0 31 28 17 16 5 5 4 8 15 14 11 10 7 5 6 13 12 9 3 8 27 26 23 3 22 1 1 1 70
SROUND[ ]	/* SuperRound */
MDAP[1]	/* MoveDirectAbsPt */
SHZ[1]	/* ShiftZoneByLastPoint */
RTG[ ]	/* RoundToGrid */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
MDAP[1]	/* MoveDirectAbsPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
MDAP[1]	/* MoveDirectAbsPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
MDAP[1]	/* MoveDirectAbsPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MIRP[11100]	/* MoveIndirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MIRP[11100]	/* MoveIndirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
MD[0]	/* MeasureDistance */
ROUND[00]	/* Round */
PUSHW[ ]	/* 2 values pushed */
1 32
MD[0]	/* MeasureDistance */
ROUND[00]	/* Round */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
64
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
SHPIX[ ]	/* ShiftZoneByPixel */
SRP1[ ]	/* SetRefPoint1 */
SHZ[1]	/* ShiftZoneByLastPoint */
PUSHW[ ]	/* 2 values pushed */
32 -64
SHPIX[ ]	/* ShiftZoneByPixel */
EIF[ ]	/* EndIf */</string>
      <key>com.schriftgestaltung.Glyphs.lastChange</key>
      <string>2025-02-10 17:36:15 +0000</string>
    </dict>
  </lib>
</glyph>
