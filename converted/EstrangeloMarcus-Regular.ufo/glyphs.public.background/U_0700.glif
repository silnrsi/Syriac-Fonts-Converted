<?xml version='1.0' encoding='UTF-8'?>
<glyph name="U0700" format="2">
  <advance width="990"/>
  <unicode hex="0700"/>
  <note>
U0700
</note>
  <outline>
    <contour>
      <point x="493" y="546" type="line"/>
      <point x="644" y="696" type="line"/>
      <point x="493" y="847" type="line"/>
      <point x="343" y="696" type="line"/>
    </contour>
    <contour>
      <point x="210" y="263" type="line"/>
      <point x="361" y="413" type="line"/>
      <point x="210" y="564" type="line"/>
      <point x="60" y="413" type="line"/>
    </contour>
    <contour>
      <point x="493" y="-20" type="line"/>
      <point x="644" y="130" type="line"/>
      <point x="493" y="281" type="line"/>
      <point x="343" y="130" type="line"/>
    </contour>
    <contour>
      <point x="776" y="263" type="line"/>
      <point x="927" y="413" type="line"/>
      <point x="776" y="564" type="line"/>
      <point x="626" y="413" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>NPUSHB[ ]	/* 126 values pushed */
1 16 16 64 17 0 15 11 9 5 3 1 14 12 10 8 6 4 2 0 15 15 12 2 1 2 14 13 14 3 12 3 0 12 15 12 1 1 2 13 13 14 0 0 13 8 11 8 5 5 6 4 7 4 9 12 9 10 11 11 8 6 5 6 7 7 4 10 10 7 5 4 5 2 2 3 1 0 1 6 12 6 7 4 4 5 3 2 3 0 0 1 7 7 0 15 14 15 8 8 9 11 10 11 12 12 12 13 14 14 15 9 8 9 10 10 11 13 13 10 7 13 1 1 10 70
SROUND[ ]	/* SuperRound */
MDAP[1]	/* MoveDirectAbsPt */
SHZ[1]	/* ShiftZoneByLastPoint */
RTG[ ]	/* RoundToGrid */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MIRP[11100]	/* MoveIndirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MIRP[11100]	/* MoveIndirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MIRP[11100]	/* MoveIndirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MIRP[11100]	/* MoveIndirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
MD[0]	/* MeasureDistance */
ROUND[00]	/* Round */
PUSHW[ ]	/* 2 values pushed */
10 16
MD[0]	/* MeasureDistance */
ROUND[00]	/* Round */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
64
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
SHPIX[ ]	/* ShiftZoneByPixel */
SRP1[ ]	/* SetRefPoint1 */
SHZ[1]	/* ShiftZoneByLastPoint */
PUSHW[ ]	/* 2 values pushed */
16 -64
SHPIX[ ]	/* ShiftZoneByPixel */
EIF[ ]	/* EndIf */</string>
      <key>com.schriftgestaltung.Glyphs.lastChange</key>
      <string>2025-02-10 17:36:15 +0000</string>
    </dict>
  </lib>
</glyph>
